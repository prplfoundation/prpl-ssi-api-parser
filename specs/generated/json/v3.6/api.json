{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "prpl Software Stack Independent API",
    "license": {
      "name": "ISC"
    }
  },
  "servers": [
    {
      "url": "ubus"
    }
  ],
  "paths": {
    "User.Accounts": {
      "Add": {
        "operationId": "AddUser.Accounts",
        "summary": "Adds a new User Account.",
        "tags": [
          "User.Accounts"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ListRequest"
              },
              "example": "{\"Id\": \"Admin\", \"Enabled\": true, \"Name\": \"Administrator\", \"Password\": \"prplFoundation\", \"Description\": \"Home-Gateway administrator.\", \"RoleId\": \"User.Roles.Root\"}"
            }
          }
        },
        "responses": {
          "99": {
            "content": {
              "application/json": {
                "example": "{\"Header\": {\"Code\": 0, \"Name\": \"OK\"}, \"Body\": {\"Id\": \"Admin\"}}",
                "schema": {
                  "$ref": "#/components/schemas/User.Accounts"
                }
              }
            },
            "description": "A well-formed call was performed to a valid object with valid arguments."
          },
          "0": {
            "content": {
              "application/json": {
                "example": "{\"Header\": {\"Code\": 0, \"Name\": \"OK\"}, \"Body\": {\"Id\": 0, \"Name\": \"Guest\"}}",
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "A well-formed call was performed to a valid object with valid arguments."
          },
          "1": {
            "content": {
              "application/json": {
                "example": "{\"Header\": {\"Code\": 1, \"Name\": \"INVALID_ARGUMENT\"}}",
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "A call to an existing object and command was performed, but invalid arguments were provided (unknown argument or data type)."
          },
          "2": {
            "content": {
              "application/json": {
                "example": "{\"Header\": {\"Code\": 2, \"Name\": \"INVALID_COMMAND\"}}",
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "A call to an existing object but, non-existing (invalid) command was performed."
          },
          "3": {
            "content": {
              "application/json": {
                "example": "{\"Header\": {\"Code\": 3, \"Name\": \"INVALID_OBJECT\"}}",
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "A call to an non-existing (invalid) object was performed."
          },
          "4": {
            "content": {
              "application/json": {
                "example": "{\"Header\": {\"Code\": 4, \"Name\": \"MISSING_REQUIRED_ARGUMENT\"}}",
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "A call to an existing object and command was performed, but a non-optional/required argument was not provided."
          },
          "5": {
            "content": {
              "application/json": {
                "example": "{\"Header\": {\"Code\": 5, \"Name\": \"PERMISSION_DENIED\"}}",
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "A call to an existing object and command was performed, but the caller lackers privileges/access rights to the specified command."
          },
          "6": {
            "content": {
              "application/json": {
                "example": "{\"Header\": {\"Code\": 6, \"Name\": \"TIMEOUT\"}}",
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The object/command has failed to return a response within the expected time frame."
          },
          "7": {
            "content": {
              "application/json": {
                "example": "{\"Header\": {\"Code\": 7, \"Name\": \"OPERATION_ALREADY_IN_PROGRESS\"}}",
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The object/command has failed to return a response within the expected time frame."
          },
          "8": {
            "content": {
              "application/json": {
                "example": "{\"Header\": {\"Code\": 8, \"Name\": \"OPERATION_ILLEGAL\"}}",
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The object and commands are valid, but the triggered operation cannot be performed as it was requested in the wrong system state or order (e.g.: Stop WPS when has not been started)."
          },
          "9": {
            "content": {
              "application/json": {
                "example": "{\"Header\": {\"Code\": 9, \"Name\": \"ARGUMENT_VALUE_NOT_SUPPORTED\"}}",
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The object, commands and arguments are valid, but an argument value which is part of the API but not supported by the device was provided."
          }
        }
      },
      "List": {
        "operationId": "ListUser.Accounts",
        "summary": "Retrieves a list of User Accounts.",
        "tags": [
          "User.Accounts"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ListRequest"
              },
              "example": "{\"Limit\": 10, \"Offset\": 0}"
            }
          }
        },
        "responses": {
          "99": {
            "content": {
              "application/json": {
                "example": "{\"Header\": {\"Code\": 0, \"Name\": \"OK\"}, \"Body\": {\"List\": [{\"Id\": \"Admin\", \"Enabled\": true, \"Name\": \"Administrator\", \"Hash\": {\"Fingerprint\": \"21232f297a57a5a743894a0e4a801fc3\", \"Type\": \"MD5\"}, \"Description\": \"Home-Gateway administrator.\", \"RoleId\": \"User.Roles.Root\"}], \"Limit\": 10, \"Offset\": 0}}",
                "schema": {
                  "$ref": "#/components/schemas/User.Accounts"
                }
              }
            },
            "description": "A well-formed call was performed to a valid object with valid arguments."
          },
          "0": {
            "content": {
              "application/json": {
                "example": "{\"Header\": {\"Code\": 0, \"Name\": \"OK\"}, \"Body\": {\"Id\": 0, \"Name\": \"Guest\"}}",
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "A well-formed call was performed to a valid object with valid arguments."
          },
          "1": {
            "content": {
              "application/json": {
                "example": "{\"Header\": {\"Code\": 1, \"Name\": \"INVALID_ARGUMENT\"}}",
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "A call to an existing object and command was performed, but invalid arguments were provided (unknown argument or data type)."
          },
          "2": {
            "content": {
              "application/json": {
                "example": "{\"Header\": {\"Code\": 2, \"Name\": \"INVALID_COMMAND\"}}",
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "A call to an existing object but, non-existing (invalid) command was performed."
          },
          "3": {
            "content": {
              "application/json": {
                "example": "{\"Header\": {\"Code\": 3, \"Name\": \"INVALID_OBJECT\"}}",
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "A call to an non-existing (invalid) object was performed."
          },
          "4": {
            "content": {
              "application/json": {
                "example": "{\"Header\": {\"Code\": 4, \"Name\": \"MISSING_REQUIRED_ARGUMENT\"}}",
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "A call to an existing object and command was performed, but a non-optional/required argument was not provided."
          },
          "5": {
            "content": {
              "application/json": {
                "example": "{\"Header\": {\"Code\": 5, \"Name\": \"PERMISSION_DENIED\"}}",
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "A call to an existing object and command was performed, but the caller lackers privileges/access rights to the specified command."
          },
          "6": {
            "content": {
              "application/json": {
                "example": "{\"Header\": {\"Code\": 6, \"Name\": \"TIMEOUT\"}}",
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The object/command has failed to return a response within the expected time frame."
          },
          "7": {
            "content": {
              "application/json": {
                "example": "{\"Header\": {\"Code\": 7, \"Name\": \"OPERATION_ALREADY_IN_PROGRESS\"}}",
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The object/command has failed to return a response within the expected time frame."
          },
          "8": {
            "content": {
              "application/json": {
                "example": "{\"Header\": {\"Code\": 8, \"Name\": \"OPERATION_ILLEGAL\"}}",
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The object and commands are valid, but the triggered operation cannot be performed as it was requested in the wrong system state or order (e.g.: Stop WPS when has not been started)."
          },
          "9": {
            "content": {
              "application/json": {
                "example": "{\"Header\": {\"Code\": 9, \"Name\": \"ARGUMENT_VALUE_NOT_SUPPORTED\"}}",
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The object, commands and arguments are valid, but an argument value which is part of the API but not supported by the device was provided."
          }
        },
        "schema": {
          "type": "object",
          "properties": {
            "offset": {
              "type": "integer",
              "description": "Which object index to start with",
              "example": 45,
              "default": 0
            },
            "limit": {
              "type": "integer",
              "description": "How many objects to return",
              "min": 1,
              "max": 200,
              "default": 20
            }
          }
        }
      },
      "Delete": {
        "operationId": "DeleteUser.Accounts.{AccountId}",
        "summary": "Deletes the specified User Account.",
        "tags": [
          "User.Accounts.{AccountId}"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ListRequest"
              },
              "example": ""
            }
          }
        },
        "responses": {
          "99": {
            "content": {
              "application/json": {
                "example": "{\"Header\": {\"Code\": 0, \"Name\": \"OK\"}}",
                "schema": {
                  "$ref": "#/components/schemas/User.Accounts"
                }
              }
            },
            "description": "A well-formed call was performed to a valid object with valid arguments."
          },
          "0": {
            "content": {
              "application/json": {
                "example": "{\"Header\": {\"Code\": 0, \"Name\": \"OK\"}, \"Body\": {\"Id\": 0, \"Name\": \"Guest\"}}",
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "A well-formed call was performed to a valid object with valid arguments."
          },
          "1": {
            "content": {
              "application/json": {
                "example": "{\"Header\": {\"Code\": 1, \"Name\": \"INVALID_ARGUMENT\"}}",
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "A call to an existing object and command was performed, but invalid arguments were provided (unknown argument or data type)."
          },
          "2": {
            "content": {
              "application/json": {
                "example": "{\"Header\": {\"Code\": 2, \"Name\": \"INVALID_COMMAND\"}}",
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "A call to an existing object but, non-existing (invalid) command was performed."
          },
          "3": {
            "content": {
              "application/json": {
                "example": "{\"Header\": {\"Code\": 3, \"Name\": \"INVALID_OBJECT\"}}",
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "A call to an non-existing (invalid) object was performed."
          },
          "4": {
            "content": {
              "application/json": {
                "example": "{\"Header\": {\"Code\": 4, \"Name\": \"MISSING_REQUIRED_ARGUMENT\"}}",
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "A call to an existing object and command was performed, but a non-optional/required argument was not provided."
          },
          "5": {
            "content": {
              "application/json": {
                "example": "{\"Header\": {\"Code\": 5, \"Name\": \"PERMISSION_DENIED\"}}",
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "A call to an existing object and command was performed, but the caller lackers privileges/access rights to the specified command."
          },
          "6": {
            "content": {
              "application/json": {
                "example": "{\"Header\": {\"Code\": 6, \"Name\": \"TIMEOUT\"}}",
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The object/command has failed to return a response within the expected time frame."
          },
          "7": {
            "content": {
              "application/json": {
                "example": "{\"Header\": {\"Code\": 7, \"Name\": \"OPERATION_ALREADY_IN_PROGRESS\"}}",
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The object/command has failed to return a response within the expected time frame."
          },
          "8": {
            "content": {
              "application/json": {
                "example": "{\"Header\": {\"Code\": 8, \"Name\": \"OPERATION_ILLEGAL\"}}",
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The object and commands are valid, but the triggered operation cannot be performed as it was requested in the wrong system state or order (e.g.: Stop WPS when has not been started)."
          },
          "9": {
            "content": {
              "application/json": {
                "example": "{\"Header\": {\"Code\": 9, \"Name\": \"ARGUMENT_VALUE_NOT_SUPPORTED\"}}",
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The object, commands and arguments are valid, but an argument value which is part of the API but not supported by the device was provided."
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "AccountId",
            "type": "integer",
            "required": true,
            "description": "ID of a(n) Account",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20,
              "example": {
                "Limit": 10
              }
            }
          }
        ]
      },
      "Get": {
        "operationId": "GetUser.Accounts.{AccountId}",
        "summary": "Retrieves the status and configuration parameters in regards to the (specified) User Account.",
        "tags": [
          "User.Accounts.{AccountId}"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ListRequest"
              },
              "example": ""
            }
          }
        },
        "responses": {
          "99": {
            "content": {
              "application/json": {
                "example": "{\"Header\": {\"Code\": 0, \"Name\": \"OK\"}, \"Body\": {\"Id\": \"Admin\", \"Enabled\": true, \"Name\": \"Administrator\", \"Hash\": {\"Fingerprint\": \"21232f297a57a5a743894a0e4a801fc3\", \"Type\": \"MD5\"}, \"Description\": \"Home-Gateway administrator.\", \"RoleId\": \"User.Roles.Root\"}}",
                "schema": {
                  "$ref": "#/components/schemas/User.Accounts"
                }
              }
            },
            "description": "A well-formed call was performed to a valid object with valid arguments."
          },
          "0": {
            "content": {
              "application/json": {
                "example": "{\"Header\": {\"Code\": 0, \"Name\": \"OK\"}, \"Body\": {\"Id\": 0, \"Name\": \"Guest\"}}",
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "A well-formed call was performed to a valid object with valid arguments."
          },
          "1": {
            "content": {
              "application/json": {
                "example": "{\"Header\": {\"Code\": 1, \"Name\": \"INVALID_ARGUMENT\"}}",
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "A call to an existing object and command was performed, but invalid arguments were provided (unknown argument or data type)."
          },
          "2": {
            "content": {
              "application/json": {
                "example": "{\"Header\": {\"Code\": 2, \"Name\": \"INVALID_COMMAND\"}}",
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "A call to an existing object but, non-existing (invalid) command was performed."
          },
          "3": {
            "content": {
              "application/json": {
                "example": "{\"Header\": {\"Code\": 3, \"Name\": \"INVALID_OBJECT\"}}",
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "A call to an non-existing (invalid) object was performed."
          },
          "4": {
            "content": {
              "application/json": {
                "example": "{\"Header\": {\"Code\": 4, \"Name\": \"MISSING_REQUIRED_ARGUMENT\"}}",
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "A call to an existing object and command was performed, but a non-optional/required argument was not provided."
          },
          "5": {
            "content": {
              "application/json": {
                "example": "{\"Header\": {\"Code\": 5, \"Name\": \"PERMISSION_DENIED\"}}",
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "A call to an existing object and command was performed, but the caller lackers privileges/access rights to the specified command."
          },
          "6": {
            "content": {
              "application/json": {
                "example": "{\"Header\": {\"Code\": 6, \"Name\": \"TIMEOUT\"}}",
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The object/command has failed to return a response within the expected time frame."
          },
          "7": {
            "content": {
              "application/json": {
                "example": "{\"Header\": {\"Code\": 7, \"Name\": \"OPERATION_ALREADY_IN_PROGRESS\"}}",
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The object/command has failed to return a response within the expected time frame."
          },
          "8": {
            "content": {
              "application/json": {
                "example": "{\"Header\": {\"Code\": 8, \"Name\": \"OPERATION_ILLEGAL\"}}",
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The object and commands are valid, but the triggered operation cannot be performed as it was requested in the wrong system state or order (e.g.: Stop WPS when has not been started)."
          },
          "9": {
            "content": {
              "application/json": {
                "example": "{\"Header\": {\"Code\": 9, \"Name\": \"ARGUMENT_VALUE_NOT_SUPPORTED\"}}",
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The object, commands and arguments are valid, but an argument value which is part of the API but not supported by the device was provided."
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "AccountId",
            "type": "integer",
            "required": true,
            "description": "ID of a(n) Account",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20,
              "example": {
                "Limit": 10
              }
            }
          }
        ]
      },
      "Set": {
        "operationId": "SetUser.Accounts.{AccountId}",
        "summary": "Modifies the status and configuration parameters of the (specified) User Account.",
        "tags": [
          "User.Accounts.{AccountId}"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ListRequest"
              },
              "example": "{\"Name\": \"Administrator\", \"Enabled\": true, \"Password\": \"prplFoundation\", \"Description\": \"Home-Gateway administrator.\", \"RoleId\": \"User.Roles.Root\"}"
            }
          }
        },
        "responses": {
          "99": {
            "content": {
              "application/json": {
                "example": "{\"Header\": {\"Code\": 0, \"Name\": \"OK\"}}",
                "schema": {
                  "$ref": "#/components/schemas/User.Accounts"
                }
              }
            },
            "description": "A well-formed call was performed to a valid object with valid arguments."
          },
          "0": {
            "content": {
              "application/json": {
                "example": "{\"Header\": {\"Code\": 0, \"Name\": \"OK\"}, \"Body\": {\"Id\": 0, \"Name\": \"Guest\"}}",
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "A well-formed call was performed to a valid object with valid arguments."
          },
          "1": {
            "content": {
              "application/json": {
                "example": "{\"Header\": {\"Code\": 1, \"Name\": \"INVALID_ARGUMENT\"}}",
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "A call to an existing object and command was performed, but invalid arguments were provided (unknown argument or data type)."
          },
          "2": {
            "content": {
              "application/json": {
                "example": "{\"Header\": {\"Code\": 2, \"Name\": \"INVALID_COMMAND\"}}",
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "A call to an existing object but, non-existing (invalid) command was performed."
          },
          "3": {
            "content": {
              "application/json": {
                "example": "{\"Header\": {\"Code\": 3, \"Name\": \"INVALID_OBJECT\"}}",
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "A call to an non-existing (invalid) object was performed."
          },
          "4": {
            "content": {
              "application/json": {
                "example": "{\"Header\": {\"Code\": 4, \"Name\": \"MISSING_REQUIRED_ARGUMENT\"}}",
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "A call to an existing object and command was performed, but a non-optional/required argument was not provided."
          },
          "5": {
            "content": {
              "application/json": {
                "example": "{\"Header\": {\"Code\": 5, \"Name\": \"PERMISSION_DENIED\"}}",
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "A call to an existing object and command was performed, but the caller lackers privileges/access rights to the specified command."
          },
          "6": {
            "content": {
              "application/json": {
                "example": "{\"Header\": {\"Code\": 6, \"Name\": \"TIMEOUT\"}}",
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The object/command has failed to return a response within the expected time frame."
          },
          "7": {
            "content": {
              "application/json": {
                "example": "{\"Header\": {\"Code\": 7, \"Name\": \"OPERATION_ALREADY_IN_PROGRESS\"}}",
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The object/command has failed to return a response within the expected time frame."
          },
          "8": {
            "content": {
              "application/json": {
                "example": "{\"Header\": {\"Code\": 8, \"Name\": \"OPERATION_ILLEGAL\"}}",
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The object and commands are valid, but the triggered operation cannot be performed as it was requested in the wrong system state or order (e.g.: Stop WPS when has not been started)."
          },
          "9": {
            "content": {
              "application/json": {
                "example": "{\"Header\": {\"Code\": 9, \"Name\": \"ARGUMENT_VALUE_NOT_SUPPORTED\"}}",
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "The object, commands and arguments are valid, but an argument value which is part of the API but not supported by the device was provided."
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "AccountId",
            "type": "integer",
            "required": true,
            "description": "ID of a(n) Account",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20,
              "example": {
                "Limit": 10
              }
            }
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "ListRequest": {
        "properties": {
          "Limit": {
            "description": "How many items to return at one time (max 200)",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20,
              "example": {
                "Limit": 10
              }
            }
          },
          "Offset": {
            "description": "Which object index to start with",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0,
              "example": {
                "Offset": 45
              }
            }
          }
        }
      },
      "Error": {
        "required": [
          "code",
          "name"
        ],
        "properties": {
          "header": {
            "properties": {
              "code": {
                "type": "integer",
                "format": "int32"
              },
              "name": {
                "type": "string"
              }
            }
          }
        }
      },
      "User.Accounts": {
        "description": "User.Accounts Object",
        "id": "User.Accounts",
        "type": "object",
        "required": [
          "Name",
          "Password",
          "RoleId"
        ],
        "properties": {
          "Description": {
            "type": "String",
            "description": "User Account description.",
            "format": "-",
            "default_value": "null",
            "possible_values": "\"null\" or any string with length from 1 up to 64 chars"
          },
          "Enabled": {
            "type": "Boolean",
            "description": "User Account administrative status.",
            "format": "-",
            "default_value": "true",
            "possible_values": "\"true\" or \"false\"",
            "enum": [
              "true",
              "false"
            ]
          },
          "Id": {
            "type": "String",
            "description": "User Account unique identifier.",
            "format": "1 up to 64 chars",
            "default_value": "Integer starting at 0",
            "possible_values": "any string with length from 1 up to 64 chars"
          },
          "Name": {
            "type": "String",
            "description": "User Account name.",
            "format": "-",
            "default_value": "-",
            "possible_values": "any string with length from 1 up to 64 chars"
          },
          "Password": {
            "type": "String",
            "description": "User Account password.",
            "format": "-",
            "default_value": "-",
            "possible_values": "any string with length from 3 up to 64 chars",
            "writeOnly": true
          },
          "RoleId": {
            "type": "String",
            "description": "User Account Id of the linked role.",
            "format": "-",
            "default_value": "-",
            "possible_values": "valid \"User.Accounts.Roles.{RoleId}\" object"
          },
          "Hash": {
            "type": "object",
            "properties": {
              "Fingerprint": {
                "type": "String",
                "description": "User Account password hash fingerprint.",
                "format": "-",
                "default_value": "-",
                "possible_values": "-",
                "readOnly": true
              },
              "Type": {
                "type": "String",
                "description": "User Account password hash type.",
                "format": "-",
                "default_value": "-",
                "possible_values": "\"MD5\", \"SHA-256\" or \"SHA-512\"",
                "enum": [
                  "MD5, SHA-256",
                  "SHA-512"
                ],
                "readOnly": true
              }
            },
            "required": []
          }
        },
        "events": {
          "1": {
            "content": {
              "application/json": {
                "example": "{\"Header\": {\"Code\": 1, \"Name\": \"USER_ACCOUNTS_ADDED\"}, \"Body\": {\"AccountId\": \"User.Accounts.2\"}}"
              }
            },
            "description": "Raised when a new User Account is added.",
            "code": "USER_ACCOUNTS_ADDED"
          },
          "2": {
            "content": {
              "application/json": {
                "example": "{\"Header\": {\"Code\": 2, \"Name\": \"USER_ACCOUNTS_DELETED\"}, \"Body\": {\"AccountId\": \"User.Accounts.2\"}}"
              }
            },
            "description": "Raised when an existing User Account is deleted.",
            "code": "USER_ACCOUNTS_DELETED"
          },
          "3": {
            "content": {
              "application/json": {
                "example": "{\"Header\": {\"Code\": 3, \"Name\": \"USER_ACCOUNTS_MODIFIED\"}, \"Body\": {\"AccountId\": \"User.Accounts.2\"}}"
              }
            },
            "description": "Raised when an existing User Account is modified.",
            "code": "USER_ACCOUNTS_MODIFIED"
          }
        },
        "example": {}
      }
    }
  }
}